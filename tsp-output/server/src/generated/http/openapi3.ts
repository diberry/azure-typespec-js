// Generated by Microsoft TypeSpec

export const openApiDocument = {
  openapi: "3.0.0",
  info: { title: "Widget Service", version: "0.0.0" },
  tags: [{ name: "Widgets" }],
  paths: {
    "/widgets": {
      get: {
        operationId: "Widgets_list",
        parameters: [],
        responses: {
          "200": {
            description: "The request has succeeded.",
            content: {
              "application/json": {
                schema: {
                  type: "array",
                  items: { $ref: "#/components/schemas/ReadWidgetItem" },
                },
              },
            },
          },
          default: {
            description: "An unexpected error response.",
            content: {
              "application/json": {
                schema: { $ref: "#/components/schemas/Error" },
              },
            },
          },
        },
        tags: ["Widgets"],
      },
      post: {
        operationId: "Widgets_create",
        parameters: [],
        responses: {
          "200": {
            description: "The request has succeeded.",
            content: {
              "application/json": {
                schema: { $ref: "#/components/schemas/ReadWidget" },
              },
            },
          },
          default: {
            description: "An unexpected error response.",
            content: {
              "application/json": {
                schema: { $ref: "#/components/schemas/Error" },
              },
            },
          },
        },
        tags: ["Widgets"],
        requestBody: {
          required: true,
          content: {
            "application/json": {
              schema: { $ref: "#/components/schemas/CreateWidget" },
            },
          },
        },
      },
    },
    "/widgets/{id}": {
      get: {
        operationId: "Widgets_read",
        parameters: [
          {
            name: "id",
            in: "path",
            required: true,
            schema: { type: "string" },
          },
        ],
        responses: {
          "200": {
            description: "The request has succeeded.",
            content: {
              "application/json": {
                schema: { $ref: "#/components/schemas/ReadWidget" },
              },
            },
          },
          default: {
            description: "An unexpected error response.",
            content: {
              "application/json": {
                schema: { $ref: "#/components/schemas/Error" },
              },
            },
          },
        },
        tags: ["Widgets"],
      },
      delete: {
        operationId: "Widgets_delete",
        parameters: [
          {
            name: "id",
            in: "path",
            required: true,
            schema: { type: "string" },
          },
        ],
        responses: {
          "204": {
            description:
              "There is no content to send for this request, but the headers may be useful. ",
          },
          default: {
            description: "An unexpected error response.",
            content: {
              "application/json": {
                schema: { $ref: "#/components/schemas/Error" },
              },
            },
          },
        },
        tags: ["Widgets"],
      },
    },
  },
  components: {
    schemas: {
      ReadWidgetItem: {
        type: "object",
        required: ["id", "weight", "color"],
        properties: {
          id: { type: "string" },
          weight: { type: "integer", format: "int32" },
          color: { type: "string", enum: ["red", "blue"] },
        },
        description: "",
      },
      Error: {
        type: "object",
        required: ["code", "message"],
        properties: {
          code: { type: "integer", format: "int32" },
          message: { type: "string" },
        },
      },
      ReadWidget: {
        type: "object",
        required: ["id", "weight", "color"],
        properties: {
          id: { type: "string" },
          weight: { type: "integer", format: "int32" },
          color: { type: "string", enum: ["red", "blue"] },
        },
        description: "",
      },
      CreateWidget: {
        type: "object",
        required: ["id", "weight", "color"],
        properties: {
          id: { type: "string" },
          weight: { type: "integer", format: "int32" },
          color: { type: "string", enum: ["red", "blue"] },
        },
        description: "",
      },
    },
  },
};
